#include <iostream>
#include <vector>
#include <iomanip>
using namespace std;

class HashTable {
private:
    int size;
    vector<int> table;
    int collisions;
    string method;

int primaryHash(int key) {
        return key % size;
}
int secondaryHash(int key) {
        return 1 + (key % (size - 1));
}

public:
    HashTable(int tableSize, string collisionMethod) {
        size = tableSize;
        table.resize(size, -1);
        collisions = 0;
        method = collisionMethod;
    }

    void insert(int key) {
        int index = primaryHash(key);
        int originalIndex = index;
        int i = 0;
        int stepSize = (method == "double") ? secondaryHash(key) : 1;

        while (table[index] != -1) {
            collisions++;
            if (method == "linear") {
                index = (originalIndex + i) % size;
            }
            else if (method == "quadratic") {
                index = (originalIndex + i * i) % size;
            }
            else {
                index = (originalIndex + i * stepSize) % size;
            }
            i++;

            if (i >= size) {
                cout << "Bang bam da day, khong the them khoa " << key << endl;
                return;
            }
        }

        table[index] = key;
        cout << "Chen khoa " << key << " vao vi tri " << index;
        if (i > 0) {
            cout << " (sau " << i << " lan do)";
        }
        cout << endl;
    }

    void display() {
        cout << "Bang bam (" << method << "):" << endl;
        cout << "Index\tValue" << endl;
        for (int i = 0; i < size; i++) {
            cout << i << "\t";
            if (table[i] == -1) {
                cout << "null";
            }
            else {
                cout << table[i];
            }
            cout << endl;
        }
        cout << "Tong so va cham: " << collisions << endl << endl;
    }
};

int main() {
    int m = 11;
    int keys[] = { 10, 22, 31, 4, 15, 28, 17, 88, 59 };
    int n = sizeof(keys) / sizeof(keys[0]);

    HashTable linearTable(m, "linear");
    HashTable quadraticTable(m, "quadratic");
    HashTable doubleTable(m, "double");

    cout << "1. Do tuyen tinh:" << endl;
    for (int i = 0; i < n; i++) {
        linearTable.insert(keys[i]);
    }
    linearTable.display();

    cout << "2. Do bac hai:" << endl;
    for (int i = 0; i < n; i++) {
        quadraticTable.insert(keys[i]);
    }
    quadraticTable.display();

    cout << "3. Bam kep:" << endl;
    for (int i = 0; i < n; i++) {
        doubleTable.insert(keys[i]);
    }
    doubleTable.display();

    return 0;
}
